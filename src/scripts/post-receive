#!/usr/bin/php
<?php
include 'open-photo-hook/credentials.php';
include 'open-photo-hook/OpenPhotoOAuth.php';
$output = Array();
$status = 1;
$output2 = Array();
$status2 = 1;
$client = new OpenPhotoOAuth($host, $consumerKey, $consumerSecret, $token, $tokenSecret);


function normalizePath($path){
		$path2 = addcslashes($path,' "\'');
		return $path2;
}

function getName($path){
	$array = explode('/',$path);
	$name = $array[count($array) - 1];
	$array = explode ('.',$name);
	$name = $array[0];
	$name = stripcslashes($name);
	return $name;
}
echo $repo;
echo "\n";
exec("cd $repo; pwd;",$output2, $status2);
unset($GIT_DIR);
echo "$output2[0]\n";

exec("cd $repo; unset GIT_DIR; git diff-tree --name-status -r -z master synced/master", $output, $status);
echo "here\n";
if($status == 0 && (count($output) != 0)){
	$matches = preg_split('/\0/', $output[0]);
	for($i = 0, $size = count($matches) - 2; $i < $size; ++$i) {
		$mode = $matches[$i];
		++$i;
		$linkName = $matches[$i];
		$linkNameSh = normalizePath($linkName);
		exec("cd $repo; unset GIT_DIR; git checkout synced/master $linkNameSh; git annex get $linkNameSh", $output2,$status2);
		echo "here2\n";
		$linkPath = sprintf('%1$s/%2$s',$repo,$linkName);
		$photoPath = sprintf('%1$s/%2$s',$repo,file_get_contents($linkPath));
		
		if($mode == 'A'){
		
		$response = $client->post("/photo/upload.json", array('photo' => "@$photoPath", 
			'permission' => urlencode('1'),
			'title' => getName($linkNameSh),
			'tags' => "git-annex"));
		exec("cd $repo; unset GIT_DIR; git branch -f master synced/master", $output2, $status2);
		}
		
		if($mode == 'D'){
		//TODO delete
		}
		
		exec("cd $repo; unset GIT_DIR; git rm $linkNameSh;", $output2,$status2);
		echo "\n";
		echo $response;
		echo "\n";

	}

} 

